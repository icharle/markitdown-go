name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: []

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        arch: [ x86_64 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget tar python3 python3-pip python3-venv
          case "${{ matrix.arch }}" in
            x86_64)
              sudo apt-get install -y gcc g++
              ;;
          esac

      - name: Download Python source code
        run: |
          wget https://www.python.org/ftp/python/3.13.0/Python-3.13.0.tgz
          tar xzf Python-3.13.0.tgz
          mv Python-3.13.0 python-src

      - name: Build Python
        run: |
          cd python-src
          mkdir -p build
          case "${{ matrix.arch }}" in
            x86_64)
              CFLAGS="-g0" ./configure --build=x86_64-linux-gnu --host=x86_64-linux-gnu --enable-optimizations --enable-ipv6 --disable-shared --enable-static --prefix=$(pwd)/build/x86_64
              ;;
          esac
          make -j$(nproc)
          make install
          
      - name: Verify library path
        run: |
          ldd --version
          
          STATIC_LIB=$(find $(pwd)/python-src/build/${{ matrix.arch }}/lib -name "libpython3*.a")
          SHARED_LIB=$(find $(pwd)/python-src/build/${{ matrix.arch }}/lib -name "libpython3*.so*")
          
          # Check for static library
          if [ -z "$STATIC_LIB" ]; then
            echo "Error: Python static library (.a) not found!"
          else
            echo "Found Python static library: $STATIC_LIB"
          fi

          # Check for shared library
          if [ -z "$SHARED_LIB" ]; then
            echo "Error: Python shared library (.so) not found!"
          else
            echo "Found Python shared library: $SHARED_LIB"
          fi
          
      - name: Add Python bin to PATH and set library path dynamically
        run: |
          export PATH=$(pwd)/python-src/build/${{ matrix.arch }}/bin:$PATH
          echo "$(pwd)/python-src/build/${{ matrix.arch }}/bin" >> $GITHUB_PATH
          
          export LD_LIBRARY_PATH=$(pwd)/python-src/build/${{ matrix.arch }}/lib:$LD_LIBRARY_PATH
          echo "LD_LIBRARY_PATH=$(pwd)/python-src/build/${{ matrix.arch }}/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      
      - name: Debug LD_LIBRARY_PATH
        run: |
          echo "LD_LIBRARY_PATH is: $LD_LIBRARY_PATH"
          ls $(pwd)/python-src/build/${{ matrix.arch }}/lib
          ls $(pwd)/python-src/build/${{ matrix.arch }}/include
      
      - name: Install pip packages
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install markitdown

      - name: Save built libraries
        run: |
          mkdir -p libs/${{ matrix.arch }}
          cp -r python-src/build/${{ matrix.arch }}/lib/* libs/${{ matrix.arch }}
          cp -r python-src/build/${{ matrix.arch }}/include libs/${{ matrix.arch }}

      - uses: actions/upload-artifact@v3
        with:
          name: libpython-${{ matrix.arch }}
          path: libs/${{ matrix.arch }}
